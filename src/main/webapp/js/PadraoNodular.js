/**
 * 
 */
//import KNN from './knn.js';
//
//import euclidean from './euclidean.js';

//var dataset = [[0, 0, 0], [0, 1, 1], [1, 1, 0], [2, 2, 2], [1, 2, 2], [2, 1, 2]];
//var predictions = [0, 0, 0, 1, 1, 1];


/*var cincodoencas = [[0,0,0,0,1,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,1,0,0],
[0,1,0,1,4,0,0,0,1,0,0,0,0,0,0,0,0,1,1,0,1,0,0,0,0,0,1,0,0,0,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0],
[1,1,1,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,0,0,0,0,0,1],
[0,0,0,0,4,0,2,0,0,0,0,0,0,1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,1,0],
[0,1,2,1,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,2,0,0,0,1,0,0]
];*/

var cincodoencas = [[0,0,0,0,1,1,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,1,0,0],
	[0,1,0,1,4,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,0,0,0,0,1,0,0,0,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0],
	[1,1,1,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,0,0,0,0,0,1],
	[0,0,0,0,4,0,0,2,0,0,0,0,0,1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,1,0],
	[0,1,2,1,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,2,0,0,0,1,0,0]
];

//var classes = [0,1,2,3,4];

/*var predict = [
	[0,0,0,0,1,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,1,0,0],
	[0,1,0,1,4,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0],
	[1,1,1,0,4,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,2,0,0,0,0,0,1],
	[0,0,0,0,4,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,0,0],
	[0,1,2,1,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,1,0,0]

];*/

var predict = [
	[0,0,0,0,1,1,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,1,0,0],
	[0,1,0,1,4,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0],
	[1,1,1,0,4,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,2,0,0,0,0,0,1],
	[0,0,0,0,4,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,0,0],
	[0,1,2,1,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,1,0,0]
];

var pesosoma = [1,1,1,1,1,1,3,3,3,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.5,0.5,0.5,0.5,0.5,0.5,0.5];
var pesosub = [-1,-1,-1,-1,-1,-1,-3,-3,-3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];

var pesodoencas = [17.599999999999994, 18.199999999999992, 16.999999999999996, 17.199999999999996, 16.999999999999996];

var pesop = [];
var distancias = [];

//var knn = new KNN(dataset, predictions);
//var knn = new KNN(cincodoencas, classes, {k: 1});
//var dataset = [[0, 0, 0], [2, 2, 2]];

//var ans = knn.predict(dataset);
//var ans = knn.predict(predict);  // resutado correto [ 0,1,2,3,4]

//console.log(ans);

//for(var j = 0; j < 5; j++){
//	pesodoencas[j] = 16;
//	for(var i = 9; i < 103; i++){
//		if(cincodoencas[j][i] === 1) pesodoencas[j] += pesosoma[i];		
//	}
//	
//	console.log("doenca "+ j, pesodoencas[j]);
//}

function calcEuclid(previs){	
//	var knn = new KNN(cincodoencas, classes, {k: 1});//
//	var ans = knn.predict(previs);
	
	console.log("Teste com a distancia Euclidiana");
	for(var i = 0; i<cincodoencas.length;i++){
		distancias[i] = new Array(2);
		distancias[i][1] = i;
		
		//for(var j = 0; j<previs.length;j++){
			var e  = euclidean(previs, cincodoencas[i] );
			console.log("doenÃ§a: " + i + " pred: 1 distancia: "+e);
			distancias[i][0] = e;
		//}
		
		console.log("");	
	}
	
	distancias.sort(sortFunction);
	console.log(distancias);
}

function calcPeso(previs){
	var pesop = [];

	for(var j = 0; j < cincodoencas.length; j++){
		pesop[j] = new Array(2);
		
		pesop[j][0] = 0;
		pesop[j][1] = j;	
		for(var i = 0; i < previs.length; i++){
			if(i <= 8 || i == 103){ //caracteristicas e sexo
				if(previs[i] === cincodoencas[j][i]){
					pesop[j][0] += pesosoma[i];
				}else{
					pesop[j][0] += pesosub[i];
				}
			}else if(i > 8 && i <= 102){ //local, assoc, achados
				if(previs[i] === 1){
					pesop[j][0] += pesosoma[i];
				}else{
					pesop[j][0] += pesosub[i];
				}
			}else{  //idade
				if(previs[i] === cincodoencas[j][i]){
					pesop[j][0] += pesosoma[i];
					break;
				}else{
					pesop[j][0] += pesosub[i];
				}
			}
		}
		
		console.log("predict "+ pesop[j][1], pesop[j][0]);
		
		pesop[j][0] = pesop[j][0] * 100 / pesodoencas[j];
		
		console.log("porcent "+ pesop[j][1], pesop[j][0]);
	}
	
	pesop.sort(sortFunction);
	console.log(pesop);
	
	resultado_peso(pesop)
}

function sortFunction(a, b) {
    if (a[0] === b[0]) {
        return 0;
    }
    else {
        return (a[0] < b[0]) ? -1 : 1;
    }
}

function resultado_peso(resul){
	
//	for(var i=resul.length-1;i>=0;i--){
//		
//		
//		$("knn"+resul[i][2]).show();
//		
//		
//	}
	
	var id;
	
	var i=resul.length-1;
	
	while(i>0 && resul[i][0]>50.){
		console.log("resul")
		console.log(resul[i][0] + " - " +resul[i][1])
		id = resul[i][1];
		console.log("id "+ "#knn" + (id+1) )
		
		$("#knn"+ ( id+1)   ).show();
		$('#knn1').click();
		
		i = i-1;	
	}
}
//abrir a aba do resultado a parti do id

//$('#ui-id-1').click();

function distanciaManhattan(){
	var previs = [0,0,0,0,1,1,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,1,0,0];
	
	for(var i = 0; i < cincodoencas.length; i++){
		var dm = 0;
		for(var j = 0; j < previs.length; j++){
			dm += Math.abs(cincodoencas[i][j] - previs[j]);
		}		
		console.log("Doenca "+i+" Distancia "+dm);
	}
	
//	Doenca 0 Distancia 20
//	Doenca 1 Distancia 16
//	Doenca 2 Distancia 10 
//	Doenca 3 Distancia 15 
//	Doenca 4 Distancia 3
	
//	Doenca 0 Distancia 18 
//	Doenca 1 Distancia 18 
//	Doenca 2 Distancia 10 
//	Doenca 3 Distancia 5 
//	Doenca 4 Distancia 13
	
//	Doenca 0 Distancia 20 
//	Doenca 1 Distancia 18 
//	Doenca 2 Distancia 2 
//	Doenca 3 Distancia 13 
//	Doenca 4 Distancia 11
	
//	Doenca 0 Distancia 19 
//	Doenca 1 Distancia 9 
//	Doenca 2 Distancia 13 
//	Doenca 3 Distancia 16 
//	Doenca 4 Distancia 8
	
//	Doenca 0 Distancia 3 
//	Doenca 1 Distancia 23 
//	Doenca 2 Distancia 19 
//	Doenca 3 Distancia 18 
//	Doenca 4 Distancia 18
}

function nth_root(value, n_root){
	var root_value = 1/n_root.toFixed(2);
	return Math.round (Math.pow(value.toFixed(4), root_value.toFixed(4)) * 100) / 100;
}

function minkowski_distance(p_value){
	var previs = [0,1,0,1,4,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,0,0,0,0,1,0,0,0,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0];
	console.log("minkowski_distance");
	for(var i = 0; i < cincodoencas.length; i++){
		var soma = 0;
		for(var j = 0; j < previs.length; j++){
			soma += Math.pow(Math.abs(cincodoencas[i][j] - previs[j]), p_value);
		}
		console.log(nth_root(soma, p_value));
	}
	
//	1.44 
//	3.76 
//	3.5 
//	3.48 
//	3.63
	
//	3.66 
//	2.08 
//	2.67 
//	3.04 
//	2.71
	
//	3.53 
//	2.88 
//	1.26 
//	2.67 
//	2.22
	
//	3.48 
//	2.88 
//	2.15 
//	1.71 
//	2.67	
	
//	3.68 
//	3.04 
//	2.15 
//	3 
//	1.44
} 
    
	 
    
